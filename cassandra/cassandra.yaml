---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cassandra-pv-volume
  namespace: dev
  labels:
    type: local
spec:
  storageClassName: cassandra-standard
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/kubernetes/cassandra/


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cassandra-data-claim
  namespace: dev
spec:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: cassandra-standard
  resources:
    requests:
      storage: 5Gi

---    
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  namespace: dev
  labels:
    app: cassandra
spec:
  serviceName: cassandra
  replicas: 3
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
      - name: cassandra
        image: cassandra:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 500Mi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - nodetool drain
        env:
          - name: MAX_HEAP_SIZE
            value: 500M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "kubernetes.default.svc.cluster.local"
          - name: CASSANDRA_CLUSTER_NAME
            value: "K8Demo"
          - name: CASSANDRA_DC
            value: "DC1-K8Demo"
          - name: CASSANDRA_RACK
            value: "Rack1-K8Demo"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        # readinessProbe:
        #   exec:
        #     command:
        #     - /bin/bash
        #     - -c
        #     - /ready-probe.sh
        #   initialDelaySeconds: 15
        #   timeoutSeconds: 5
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-persistence-storage
          mountPath: /cassandra_data
      volumes:
      - name: cassandra-persistence-storage
        persistentVolumeClaim:
          claimName: cassandra-data-claim

# ---
# kind: StorageClass
# apiVersion: storage.k8s.io/v1
# metadata:
#   name: fast
# provisioner: k8s.io/minikube-hostpath
# parameters:
#   type: pd-ssd



---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cassandra
  name: cassandra
spec:
  selector:
    name: cassandra
  ports:
  - protocol: TCP
    port: 9042
    targetPort: 9042
    nodePort: 30042
